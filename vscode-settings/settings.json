{
  //
  // General settings (mix of defaults)
  //
  "git.enableSmartCommit": true,
  "workbench.statusBar.visible": true,
  "workbench.activityBar.visible": true,
  "git.confirmSync": false,
  "terminal.integrated.drawBoldTextInBrightColors": false,
  "terminal.external.windowsExec": "C:\\Program Files\\Git\\git-bash.exe",
  "terminal.integrated.defaultProfile.windows": "Git Bash",
  "git-graph.showCurrentBranchByDefault": true,
  "workbench.iconTheme": "vscode-icons",
  "git-graph.commitDetailsViewLocation": "Docked to Bottom",
  "workbench.colorTheme": "Visual Studio Light",
  "terminal.integrated.cursorBlinking": true,
  "gitlens.views.repositories.branches.layout": "list",
  "terminal.integrated.fontSize": 12,
  "css.remoteStyleSheets": [],
  "less.lint.compatibleVendorPrefixes": "error",
  "browser-preview.startUrl": "http://localhost:3000",

  //
  // HTML
  //
  "html-css-class-completion.includeGlobPattern": "**/*.{css,html,vue}", // search those files for class completion
  "html-css-class-completion.enableEmmetSupport": true, // preferred html attribute wrapping method ("auto" -> no wrapping) (fav: preserve-aligned)
  "html.format.wrapLineLength": 200, // when formatting, and a line added after element, do not remove it (default true)
  "html.format.maxPreserveNewLines": 1, // when formatting do not not remove this nbt of empty lines. (default null or 0)
  "html.format.extraLiners": "", // adds empty after those html tags. (default "head, body, /html")

  //
  // Code Spell Checker - extension for spelling misstakes
  //
  "cSpell.flagWords": ["TODO", "TEMP"],
  "cSpell.diagnosticLevel": "Hint", // Lowest level not printig to PROBLEMS. marked in UI with "..." (default Information)
  "cSpell.logLevel": "None", // unsure what this does but do not want messegaes about spelling mistakes in any logs
  "cSpell.allowCompoundWords": true, // not so strick, accepts more
  "cSpell.maxDuplicateProblems": 20,
  "cSpell.maxNumberOfProblems": 20,
  "cSpell.spellCheckDelayMs": 200, // wais a while before checking spelling. ften correct myself directly when writing.
  "cSpell.showStatus": false, // false -> do not showstatus/icon on bottom bar
  "cSpell.enabledLanguageIds": [
    "asciidoc", // VSCode languages to check spelling in
    "c",
    "cpp",
    "csharp",
    "css",
    "git-commit",
    "go",
    "handlebars",
    "haskell",
    "html",
    "jade",
    "java",
    "javascript",
    "javascriptreact",
    "json",
    "jsonc",
    "latex",
    "less",
    "markdown",
    "php",
    "plaintext",
    "python",
    "pug",
    "restructuredtext",
    "rust",
    "scala",
    "scss",
    "text",
    "typescript",
    "typescriptreact",
    "yaml",
    "yml",
    "vue"
  ],
  "cSpell.userWords": [
    "configurated",
    "Czerwinski",
    "iface",
    "ifaces",
    "ifname",
    "logut",
    "mixins",
    "nuxt",
    "nuxtjs",
    "rgba",
    "Signin",
    "Thanx",
    "Vetur",
    "vuetify",
    "vuex"
  ], // diffrent languages can be disabled like this with false (do from UI)
  "editor.formatOnPaste": true, // auto-format on paste (default false)
  "editor.formatOnSave": true, // auto-format on save (default false)
  "[markdown]": {
    "editor.formatOnSave": false // do not format markdown as it changes too much
  },
  // Those setting aply only if build in none formatter was used (buid in used)
  "editor.tabSize": 2,
  "editor.insertSpaces": false,
  "editor.minimap.enabled": false,
  "diffEditor.renderSideBySide": false,
  "html.format.wrapAttributes": "preserve-aligned",
  "editor.quickSuggestions": {
    "strings": true // if false you won't see emmet suggestions as you type
  },
  "editor.bracketPairColorization.enabled": true,
  "editor.guides.bracketPairs": "active",

  //
  // Live-server - extension
  //
  "liveServer.settings.useBrowserPreview": true, // open live server in VScode window instead of browser (default false)
  "liveServer.settings.donotShowInfoMsg": true, // disable info pop ups (default false)

  //
  // Prettier - formatting extension
  //
  "prettier.trailingComma": "none",
  "prettier.printWidth": 150,
  "prettier.vueIndentScriptAndStyle": false,

  //
  // Bracket Pair Colorizer - extension
  //
  "bracketPairColorizer.consecutivePairColors": ["()", "[]", "{}", ["Black", "LighGray", "Brown"], "Red"],
  // "bracketPairColorizer.consecutivePairColors": [["<", "</"], ["<", "/>"], ["Gold", "Orchid", "LightSkyBlue"], "Red"],
  "bracketPairColorizer.depreciation-notice": false,
  "bracketPairColorizer.forceUniqueOpeningColor": false,
  //
  // Markdown All in One & Markdown Shortcuts extensions
  //
  "markdown.extension.preview.autoShowPreviewToSide": true, // When opening -md file, auto open preview on the side
  "markdown.extension.tableFormatter.enabled": false, // false - do not format tables
  "markdown.extension.tableFormatter.normalizeIndentation": false, //  false - do not normalize tables structure
  "markdown.extension.italic.indicator": "_", // use _ instead of *
  "markdownShortcuts.bold.marker": "__", // use _ instead of **
  "markdownShortcuts.bullets.marker": "-", // use - instead of *
  "markdown.extension.toc.updateOnSave": false, // do not update table on save (default true)
  "markdownShortcuts.icons.image": true, // true -> show icon on top of the window
  "markdownShortcuts.icons.link": true, // true -> show icon on top of the window
  "markdownShortcuts.icons.citations": true, // true -> show icon on top of the window
  "markdownShortcuts.icons.italic": false, // true -> show icon on top of the window
  "markdownShortcuts.icons.strikethrough": false, // true -> show icon on top of the window
  "markdownShortcuts.icons.bullets": false, // true -> show icon on top of the window

  //
  // Settings Sync - extension
  //
  "sync.gist": "afe5c2b9b7cb26e55c51d8625d21a44a",

  //
  // Vetur extension (for Vue files)
  //
  "vetur.useWorkspaceDependencies": true,
  // "vetur.experimental.templateInterpolationService": true,
  "vetur.format.options.tabSize": 2, // nbr of spaces for a tab indent in vue files (default 4)
  "vetur.format.options.useTabs": false, // true -> indent with tabs, false -> indent with spaces (dafault false)
  "vetur.format.styleInitialIndent": false, // true - auto-indent code in <style> part (dafault false)
  "vetur.format.scriptInitialIndent": false, // true - auto-indent code in <script> part (dafault false)
  "vetur.format.defaultFormatter.js": "vscode-typescript", // "vscode-typescript" do preserv wrapping of arrays [a,b,c]. Default ("prettier") wrapps automatically everything.
  "vetur.format.defaultFormatter.html": "js-beautify-html", // "js-beautify-html" preservs attribute wrapping. Default ("prettyhtml") wraps automatically all
  "vetur.format.defaultFormatter.css": "prettier", // Default ("prettier")
  "vetur.format.defaultFormatterOptions": {
    // Configuration when  "js-beautify" used as internal vetur formatter for .vue files
    "js-beautify-html": {
      "wrap_attributes": "preserve-aligned", // "preserve-aligned" preservs wrapping but aut aligned when needed (dafault "force-expand-multiline")
      "preserve_newlines": true, // do not remove empty line added by user
      "max_preserve_newlines": 1 // let 1 line only be preserved when formatting (use 0 disable it, default)
    },
    // Configuration when  "prettier" used as internal vetur formatter for .vue files
    "prettier": {
      "semi": false, // true - adds semicolon (;) at end of all js-statements
      "singleQuote": true, // false -> double quotes otherwise single
      "jsxSingleQuote": true, // false -> double quotes otherwise single
      "bracketSpacing": true, // true -> { foo: bar }, false  {foo: bar}
      "proseWrap": "preserve", // preserve - do not wrap properties if user wants then on new line
      "printWidth": 150 // Do not wrap text under 150 characheter (default 80)
    },
    // Configuration when  "pretty-html" used as internal vetur formatter for .vue files
    "prettyhtml": {
      "printWidth": 150,
      "singleQuote": true, // true - adds semicolon (;) at end of all js-statements
      "wrapAttributes": false, // false - preserves wrapping
      "sortAttributes": false // false - preserves sorting
    }
  },

  //
  // Javascript / Typesscript (Configuration when "vscode-typescript" used as internal vetur formatter for .vue files)
  //
  "javascript.format.insertSpaceBeforeFunctionParenthesis": false, // true -> function (), false -> function()
  "typescript.format.insertSpaceBeforeFunctionParenthesis": false,
  "javascript.preferences.quoteStyle": "single", // Preferred quote style: `single` quotes, `double` quotes. (default "auto")
  "typescript.preferences.quoteStyle": "single",
  "typescript.format.semicolons": "remove", //  "remove" - auto-removes ";" at end of js statements (default "ignore")
  "javascript.format.semicolons": "remove",

  //
  // ESLint extension
  //
  // "eslint.options": {
  //   // Those rules shall be assigned locall in .eslintrc.js file instead
  //   "rules": {
  //     "vue/html-indent": "off", // disable the rule with "off"
  //   }
  // },
  "eslint.lintTask.enable": true, // true -> links all files, even those not opened. False -> link and show errors only for opened files (default false)

  //
  // Auto Rename Tag Extension
  //
  "auto-rename-tag.activationOnLanguage": ["html", "vue", "xml", "php", "javascript"],

  //
  // PostCSS & EMMET
  //
  "files.associations": {
    "*.css": "scss" // handle .css as .scss. This understand our PostCSS syntax to 95% without having to try different community-created extensions
  },
  // Enable Emmet in languages that are not supported by default. (default empty)
  "emmet.syntaxProfiles": {
    "postcss": "css"
  },
  "emmet.includeLanguages": {
    "postcss": "css",
    "vue-postcss": "css",
    "vue-css": "css",
    "vue-html": "html",
    "vue": "vue"
  },

  // end
  "newly_added_settings_here": 0,
  "workbench.startupEditor": "newUntitledFile",
  "css_peek.peekFromLanguages": ["html", "ejs", "erb", "php", "javascriptreact", "typescriptreact", "typescript", "javascript", "vue"],
  "explorer.confirmDragAndDrop": false,
  "explorer.confirmDelete": false,
  "files.autoSave": "afterDelay",

  "security.workspace.trust.untrustedFiles": "open",
  "sync.autoUpload": true,
  "prettier.jsxSingleQuote": true,
  "prettier.singleQuote": true,
  "editor.defaultFormatter": "esbenp.prettier-vscode"
}
